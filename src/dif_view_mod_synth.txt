A Different Way Of Considering Modular Synthesis:

Ive been talking a bit about my generative music modular with people recently, and the hardest part is to explain why i have abandoned the options of just getting an MI Marbles or Qu-Bit Bloom plus some voices for them to control. fundamentally they just arent what iind fun about generative modular synthesis - they do everything for me and lave me with a thing to just sit and stare at he flahy lights with no input or thought.

I like geneative synthesis particularly out of the gamut of modular stuffs because it really gets into the absolute essence of modular - it's about programming a machine to create music that allows you to take advantage of features not present inother types of music - the concept that something can make noises appreciable to the listener as music even though the actual composition and tonal/timbral sculpting has been done according to a bunch of mathematical, electonic and logical rlationships between components defined by their interconnections, not the input of a realtime artist performing.

i particularly enjoy the concept of patch programming - building the necessary elements from raw, basic, building blocks - wiring up what is basically a mechano-electronic computer to follow a very simple starting point, say the signal generated by a single slow changing lfo and deriving from that an entire music production automaton that uses comprators to say when a change occurs, combined lfos and delayed clock divider outputs to create groovy rhythms, voltage controlable quantisers to dictate what scales and chords the random seeming patterns should adhere to etc.

Talking about this and trying to explain it to other modular users as conceptually simple but still in depth theortically has caused a new way of thinkin about it to develop in me - all modulaes can be concieved of as tools for converting one signal type into another:

Setups like mine relly show this, the basic building blocks of synthesis only fall into a few categories - comparators [cv into trig/gate], sequencers/env followers/syncable lfos [trig into cv], quantisers [cv into 1v/oct], multiple output logics/math/vc clock divs etc [trig to multiple dif trig patterns], logic combiners/mixers [turning multiple trigs/gates/cvs into single complex trigs/gates/cvs] vco's [1v/oct cv into audio], filters/waveshapers/audio modulators [basic audio into complex audio/varying audio], etc.

when you consider the whole setup in those terms, it becomes very easy to see that you just need to start somthing like my entire 24U of planned euro generative patching with just one thing, an lfo to generate a raw signal from scratch, and then via converting that signal into more complex varying cv's, audio, multiple outputs, and generally more diverse signals,  the only thing missing from the whole necessary understanding is feedback loops.

in geneartive synthesis, feedback is what keeps the beast alive, ever changing andyet within a range of outcomes that is neith too wild or too boring. feedback ensures that as fast as one pattern may start to click into place it will also begin to slowly evolve and change [the pattern creating change in itself as the output changes the input] but also with a crucial presence of some hysteresis, the whole system remains balanced because the possibility of wild oscillations betweeen  out of control acceleration and extremes of tempo/volume/pitch/etc and static lockups as the system is becalmed in a loop where it can trap itself in an eternal cycle of nothingness are avoided.

interestingly, these feedback loops can be very hard to even see occuring as you patch - there might be a slow lfo controlling clock speed generated by another lfo that is clock divided to sync different waveform out puts of further lfos mixed to generate a complex rhythm and pitch cv, which also run through a network of logic and math functions so giving a broad range of patterns of triggers and gates which can then control modulators in a variety of waveforms, speeds and retriggers;
yet, one insertion of a cable from the logical out of a rhythmically triggered slope gen at the end of that chain into the middle of the logic network and suddenly... bam! a feedback loop is formed that affects everything from the scale chosen by cving a quantiser triggered by the outs of the initial clock dividers to the groove that makes the bassline where the bass voice is controlled by the lfo of one of the complex mixed rhythm outputs.

makes just hooking up a complex digital voice module to a sequencing computer with three cables seem a bit dull to me...